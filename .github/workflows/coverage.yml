name: Coverage

on:
  push:        { branches: [Dev, dev, main] }
  pull_request: { branches: [Dev, dev, main] }
  workflow_dispatch: {}

jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { submodules: recursive }

      - name: Install deps (lcov + toolchain)
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake make g++ lcov

      # Rebuild with coverage flags
      - name: Build with coverage flags
        env:
          CXXFLAGS: "-O0 -g --coverage -fprofile-arcs -ftest-coverage"
          CFLAGS:   "-O0 -g --coverage -fprofile-arcs -ftest-coverage"
          LDFLAGS:  "--coverage"
        run: |
          make clean || true
          make -j"$(nproc)" build-all

      - name: Run tests
        run: make -j"$(nproc)" test

      # Capture & filter coverage using lcov
      - name: Collect lcov info
        run: |
          lcov --capture --directory . --output-file coverage.info
          # filter out system/externals & tests
          lcov --remove coverage.info '/usr/*' '*/external/*' '*/tests/*' \
               --output-file coverage.info
          lcov --list coverage.info

      - name: Generate HTML report
        run: |
          genhtml coverage.info --output-directory coverage_html

      - name: Upload HTML report (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: coverage_html

      # Upload to Codecov (public repo: no token needed; private: set CODECOV_TOKEN)
      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.info
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          fail_ci_if_error: false
